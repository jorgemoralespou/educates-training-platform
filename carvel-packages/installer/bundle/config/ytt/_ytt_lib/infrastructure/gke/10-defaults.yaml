#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:assert", "assert")

#@  (hasWorkloadIdentityExternalDns, _) = assert.try_to(lambda: len(data.values["clusterInfrastructure"]["gcp"]["workloadIdentity"]["external-dns"]) > 0)
#@  if hasWorkloadIdentityExternalDns:
#@    externalDnsWorkloadIdentity = data.values["clusterInfrastructure"]["gcp"]["workloadIdentity"]["external-dns"]
#@  else:
#@    fail("external-dns is enabled and can not be configured. Missing WorkloadIdentity")
#@  end

#@  (hasWorkloadIdentityCertManager, _) = assert.try_to(lambda: len(data.values["clusterInfrastructure"]["gcp"]["workloadIdentity"]["cert-manager"]) > 0)
#@  if hasWorkloadIdentityCertManager:
#@    certManagerWorkloadIdentity = data.values["clusterInfrastructure"]["gcp"]["workloadIdentity"]["cert-manager"]
#@  else:
#@    fail("cert-manager is enabled and can not be configured. Missing workloadIdentity")
#@  end


#@overlay/match-child-defaults missing_ok=True
#@overlay/replace
clusterPackages:
  contour:
    enabled: true
    settings:
      infraProvider: gcp
      configFileContents:
        defaultHttpVersions:
          - "HTTP/1.1"
      service:
        type: LoadBalancer
      externaldns:
        domains:
          -  #@ data.values.clusterIngress.domain
  cert-manager:
    enabled: true
    settings:
      serviceaccount:
        annotations:
          iam.gke.io/gcp-service-account: #@ certManagerWorkloadIdentity
  external-dns:
    enabled: true
    settings:
      infraProvider: gcp
      serviceaccount:
        annotations:
          iam.gke.io/gcp-service-account: #@ externalDnsWorkloadIdentity
      gcp:
        args:
          project: #@ data.values.clusterInfrastructure.gcp.project
          domain_filter: #@ data.values.clusterInfrastructure.gcp.cloudDNS.zone if hasattr(data.values.clusterInfrastructure.gcp.cloudDNS, "zone") else data.values.clusterIngress.domain
          txt_owner_id: "educates"
  certs:
    enabled: true
    settings:
      certProvider: acme-gcp
      domains:
        -  #@ data.values.clusterIngress.domain
      acme:
        gcp:
          project: #@ data.values.clusterInfrastructure.gcp.project
  kyverno:
    enabled: #@ data.values.clusterSecurity.policyEngine == "kyverno"
    settings: {}
  kapp-controller:
    enabled: false
    settings: {}
  educates:
    enabled: true
    settings:
      clusterIngress:
        tlsCertificateRef:
          namespace: projectcontour
          name: educateswildcard
  lookup-service:
    enabled: false
    settings: {}
