#@ load("@ytt:data", "data")
#@ load("/00-package.star", "image_pull_secrets")

#@ ingress_secret_ref_name = data.values.clusterIngress.tlsCertificateRef.name
#@ ingress_secret_ref_namespace = data.values.clusterIngress.tlsCertificateRef.namespace

#@ ingress_ca_secret_ref_name = data.values.clusterIngress.caCertificateRef.name
#@ ingress_ca_secret_ref_namespace = data.values.clusterIngress.caCertificateRef.namespace

---
apiVersion: secrets.educates.dev/v1beta1
kind: SecretCopier
metadata:
  name: educates-ingress-secrets
spec:
  rules:
  #@ if ingress_secret_ref_name and ingress_secret_ref_namespace and ingress_secret_ref_namespace != "educates":
  - sourceSecret:
      name: #@ ingress_secret_ref_name
      namespace: #@ ingress_secret_ref_namespace
    targetNamespaces:
      nameSelector:
        matchNames:
        - educates
  #@ end
  #@ if ingress_ca_secret_ref_name and ingress_ca_secret_ref_namespace and ingress_ca_secret_ref_namespace != "educates":
  - sourceSecret:
      name: #@ ingress_ca_secret_ref_name
      namespace: #@ ingress_ca_secret_ref_namespace
    targetNamespaces:
      nameSelector:
        matchNames:
        - educates
  #@ end

#@ secrets = []
#@ for secret in data.values.clusterSecrets.pullSecretRefs:
#@   if secret["namespace"] and secret["namespace"] != "educates":
#@     secrets.append(secret)
#@   end
#@ end
#@ if secrets:
---
apiVersion: secrets.educates.dev/v1beta1
kind: SecretCopier
metadata:
  name: educates-upstream-image-pull-secrets
spec:
  rules:
  #@ for secret in secrets:
  - sourceSecret:
      name: #@ secret["name"]
      namespace: #@ secret["namespace"]
    targetNamespaces:
      nameSelector:
        matchNames:
        - educates
  #@ end
#@ end

#@ pull_secrets = image_pull_secrets()
#@ if pull_secrets:
---
apiVersion: secrets.educates.dev/v1beta1
kind: SecretCopier
metadata:
  name: educates-downstream-image-pull-secrets
spec:
  rules:
  #@ for name in pull_secrets:
  - sourceSecret:
      name: #@ name
      namespace: educates
    targetNamespaces:
      labelSelector:
        matchLabels:
          training.educates.dev/component: portal
  - sourceSecret:
      name: #@ name
      namespace: educates
    targetNamespaces:
      labelSelector:
        matchLabels:
          training.educates.dev/component: environment
  #@ end
#@ end

#@ secrets = []
#@ for secret in data.values.websiteStyling.themeDataRefs:
#@   if secret["namespace"] and secret["namespace"] != "educates":
#@     secrets.append(secret)
#@   end
#@ end
#@ if secrets:
---
apiVersion: secrets.educates.dev/v1beta1
kind: SecretCopier
metadata:
  name: educates-upstream-website-themes
spec:
  rules:
  #@ for secret in secrets:
  - sourceSecret:
      name: #@ secret["name"]
      namespace: #@ secret["namespace"]
    targetNamespaces:
      nameSelector:
        matchNames:
        - educates
  #@ end
#@ end
