#@ load("@ytt:data", "data")
#@ load("/00-package.star", "image_reference", "image_pull_policy")

#@ ingress_ca_secret = data.values.clusterIngress.caCertificateRef.name
#@ if not ingress_ca_secret and getattr(data.values.clusterIngress.caCertificate, "ca.crt"):
#@ ingress_ca_secret = "{}-ca".format(data.values.clusterIngress.domain)
#@ end

#@ if ingress_ca_secret and data.values.clusterIngress.caNodeInjector.enabled:
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-injector
  namespace: educates
spec:
  selector:
    matchLabels:
      app: node-injector
  template:
    metadata:
      labels:
        app: node-injector
    spec:
      hostPID: true
      hostNetwork: true
      initContainers:
      - name: inject-ca
        command: ["nsenter"]
        args: ["--mount=/proc/1/ns/mnt", "--", "sh", "-c", "$(INJECT_CA)"]
        #@ image = image_reference("debian-base-image")
        image: #@ image
        imagePullPolicy: #@ image_pull_policy(image)
        env:
        - name: CA_CERTIFICATE
          valueFrom:
            secretKeyRef:
              name: #@ ingress_ca_secret
              key: ca.crt
        - name: INJECT_CA
          valueFrom:
            configMapKeyRef:
              name: node-injector
              key: inject-ca.sh
        securityContext:
          privileged: true
      containers:
      - name: pause
        #@ image = image_reference("pause-container")
        image: #@ image
        imagePullPolicy: #@ image_pull_policy(image)
#@ end
