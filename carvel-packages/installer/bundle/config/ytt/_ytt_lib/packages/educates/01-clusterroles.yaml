#@ load("@ytt:data", "data")

#@ if data.values.clusterSecurity.policyEngine == "pod-security-policies":
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-privileged-psp
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      -  "aaa-educates-privileged"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-baseline-psp
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      -  aaa-educates-baseline

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-restricted-psp
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      -  aaa-educates-restricted
#@ end

#@ if data.values.clusterSecurity.policyEngine == "security-context-constraints":
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-privileged-scc
rules:
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
    resourceNames:
      -  educates-privileged

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-baseline-scc
rules:
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
    resourceNames:
      -  educates-baseline

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: educates-restricted-scc
rules:
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
    resourceNames:
      -  educates-restricted
#@ end
